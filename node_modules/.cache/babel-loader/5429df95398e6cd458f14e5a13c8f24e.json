{"ast":null,"code":"var _jsxFileName = \"/root/web/pasa/src/views/UserProfile.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport { Card } from \"components/Card/Card.jsx\";\nimport \"assets/css/customcss.css\";\nimport Button from 'react-bootstrap/Button';\nimport { Api_route } from '../components/baseApi';\nimport axios from 'axios';\nimport Spinner from 'react-spinner-material'; //import Badge from 'react-bootstrap/Badge'\n\nimport 'materialize-css';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass UserProfile extends Component {\n  constructor() {\n    super();\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandeler = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            name = _this$state.name,\n            password = _this$state.password,\n            phone = _this$state.phone,\n            role = _this$state.role,\n            conf_password = _this$state.conf_password;\n      let Body = {\n        \"email\": email,\n        \"name\": name,\n        \"password\": password,\n        \"phone\": phone,\n        \"role\": role\n      };\n\n      if (password === conf_password) {\n        this.setState({\n          is_createuser: true\n        });\n        axios.post(Api_route(\"users?userId=2\"), Body).then(response => {\n          // console.log(response);\n          confirmAlert({\n            title: 'Succés',\n            message: \"Enregistré avec succés\",\n            buttons: [{\n              label: 'ok',\n              onClick: () => {\n                this.setState({\n                  email: null,\n                  name: null,\n                  password: null,\n                  phone: null,\n                  role: \"AGENT\",\n                  conf_password: null\n                }, this.Get_user_from_api());\n              }\n            }]\n          });\n        }).catch(error => {\n          // console.log(error.response.data.message);\n          // alert(error.response.data.message);\n          confirmAlert({\n            title: 'Erreur',\n            message: error.response.data.message,\n            buttons: [{\n              label: 'Réessayer',\n              onClick: () => this.setState({\n                is_createuser: false\n              })\n            }]\n          });\n        });\n      } else {\n        confirmAlert({\n          title: 'Erreur',\n          message: \"Mot de pass non idendique\",\n          buttons: [{\n            label: 'Réessayer',\n            onClick: () => this.setState({\n              is_createuser: false\n            })\n          }]\n        });\n      }\n    };\n\n    this.state = {\n      change_panel: false,\n      dataSource: [],\n      isload_data: true,\n      email: null,\n      name: null,\n      password: null,\n      phone: null,\n      role: \"AGENT\",\n      conf_password: null,\n      modalShow: false,\n      idUser: null,\n      is_createuser: false\n    };\n  }\n\n  change_panel(etat) {\n    this.setState({\n      change_panel: etat,\n      email: null,\n      name: null,\n      password: null,\n      phone: null,\n      role: \"AGENT\",\n      conf_password: null\n    });\n  }\n\n  Get_user_from_api() {\n    const url = \"users?page=0&size=4\";\n    fetch(Api_route(url)).then(response => response.json()).then(responseJson => {\n      this.setState({\n        dataSource: responseJson.content,\n        isload_data: false,\n        modalShow: false,\n        idUser: null,\n        is_createuser: false\n      });\n      console.log(responseJson);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.Get_user_from_api();\n  }\n\n  changeEtatuserHandeler(idUser) {\n    if (idUser) {\n      axios.patch(Api_route(\"users/disable-user?adminId=2&userId=\" + idUser)).then(response => {\n        console.log(response);\n        confirmAlert({\n          title: 'Succés',\n          message: \"Effectué avec succés\",\n          buttons: [{\n            label: 'ok',\n            onClick: () => {\n              this.Get_user_from_api();\n            }\n          }]\n        });\n      }).catch(error => {\n        confirmAlert({\n          title: 'Erreur',\n          message: error.response.data.message,\n          buttons: [{\n            label: 'Réessayer',\n            onClick: () => this.setState({\n              is_createuser: false\n            })\n          }]\n        });\n      });\n    }\n  }\n\n  deleteHandeler(idUser) {\n    if (idUser) {\n      axios.delete(Api_route(\"users/\" + idUser)).then(response => {\n        console.log(response);\n        confirmAlert({\n          title: 'Succés',\n          message: \"Supprimé avec succés\",\n          buttons: [{\n            label: 'ok',\n            onClick: () => {\n              this.Get_user_from_api();\n              ;\n            }\n          }]\n        });\n      }).catch(error => {\n        confirmAlert({\n          title: 'Erreur',\n          message: error.response.data.message,\n          buttons: [{\n            label: 'Réessayer',\n            onClick: () => this.setState({\n              is_createuser: false\n            })\n          }]\n        });\n      });\n    }\n  }\n\n  modalEvent(event, id) {\n    this.setState({\n      modalShow: event,\n      idUser: id\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          name = _this$state2.name,\n          password = _this$state2.password,\n          phone = _this$state2.phone,\n          role = _this$state2.role,\n          conf_password = _this$state2.conf_password; // console.log(this.state.dataSource);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 7\n      }\n    }, this.state.change_panel ? /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Ajouter Un utilisateur\",\n      content: /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.submitHandeler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formnom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 27\n        }\n      }, \"Nom complet :\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter le mon complet\",\n        name: \"name\",\n        required: true,\n        value: name,\n        onChange: this.changeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"foremail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 27\n        }\n      }, \"Email :\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter le email\",\n        name: \"email\",\n        required: true,\n        value: email,\n        onChange: this.changeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"forphone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 27\n        }\n      }, \"Num\\xE9ro de t\\xE9l\\xE9phone :\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"tel\",\n        placeholder: \"le Num\\xE9ro de t\\xE9l\\xE9phone \",\n        name: \"phone\",\n        required: true,\n        value: phone,\n        onChange: this.changeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"forpss\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 27\n        }\n      }, \"Mot de pass:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Mot de pass \",\n        name: \"password\",\n        required: true,\n        value: password,\n        onChange: this.changeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"forpss\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 27\n        }\n      }, \"Confirmer le mot de pass:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Confirmer le mot de pass \",\n        name: \"conf_password\",\n        required: true,\n        value: conf_password,\n        onChange: this.changeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlSelect1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 27\n        }\n      }, \"Role\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        name: \"role\",\n        value: role,\n        onChange: this.changeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"AGENT\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 29\n        }\n      }, \"AGENT\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"ADMIN\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 29\n        }\n      }, \"ADMIN\"))), !this.state.is_createuser ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 31\n        }\n      }, \"Enregistrer\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        type: \"button\",\n        className: \"btn_margin\",\n        onClick: () => {\n          this.change_panel(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 31\n        }\n      }, \"QUITTER\")) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        size: 120,\n        spinnerColor: \"#333\",\n        spinnerWidth: 2,\n        visible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 31\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 19\n      }\n    })))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: null,\n      category: \"\",\n      ctTableFullWidth: true,\n      ctTableResponsive: true,\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"bg_site btn  btn_site\",\n        onClick: () => {\n          this.change_panel(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 29\n        }\n      }, \"Ajouter un agent\")), /*#__PURE__*/React.createElement(Col, {\n        md: 7,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        className: \"form_recherche col-lg-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text col-lg-9\",\n        placeholder: \"Enter le nom \\xE0 rechercher\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 31\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"List des agents\",\n      category: \"\",\n      ctTableFullWidth: true,\n      ctTableResponsive: true,\n      content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n        striped: true,\n        hover: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 33\n        }\n      }, \"NOM COMPLET\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 33\n        }\n      }, \"NUMERO DE TELEEPHONE\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 33\n        }\n      }, \"EMAIL\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 33\n        }\n      }, \"ROLE\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 33\n        }\n      }, \"ETAT\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 33\n        }\n      }, \"DATE DE CREATION\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 29\n        }\n      }, this.state.dataSource ? this.state.dataSource.map((data, key) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 41\n          }\n        }, data.name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 41\n          }\n        }, data.phone ? data.phone : \"pas de numéro\"), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 41\n          }\n        }, data.email), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 41\n          }\n        }, data.role), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: data.enabled ? \"etat bg_site\" : \"etat bg_danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 43\n          }\n        }, data.enabled ? \"ACTIVÉ\" : \"DESACTIVÉ\", \" \")), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 41\n          }\n        }, data.creationDate), this.state.modalShow && this.state.idUser === data.id ? null : /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 45\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n          className: data.enabled ? \"bg_danger btn  btn_site\" : \"bg_site btn  btn_site\",\n          onClick: () => {\n            this.setState({\n              isload_data: true\n            }, this.changeEtatuserHandeler(data.id));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 50\n          }\n        }, data.enabled ? \"DESACTIVER\" : \"REACTIVER\")), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 41\n          }\n        }, this.state.modalShow && this.state.idUser === data.id ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 49\n          }\n        }, \"Supprimer cet agent?\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"text-danger\",\n          onClick: () => {\n            this.setState({\n              isload_data: true\n            }, this.deleteHandeler(data.id));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 52\n          }\n        }, \"oui\"), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"text-primary\",\n          onClick: () => {\n            this.modalEvent(false, null);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 51\n          }\n        }, \"non\"))) : /*#__PURE__*/React.createElement(\"button\", {\n          className: \"bg_danger btn  btn_site\",\n          onClick: () => {\n            this.modalEvent(true, data.id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 47\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-trash\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 48\n          }\n        }))));\n      }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        size: 120,\n        spinnerColor: \"#333\",\n        spinnerWidth: 2,\n        visible: this.state.isload_data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 29\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 21\n      }\n    }))))));\n  }\n\n}\n\nexport default UserProfile;","map":{"version":3,"sources":["/root/web/pasa/src/views/UserProfile.jsx"],"names":["React","Component","Grid","Row","Col","Table","Form","Card","Button","Api_route","axios","Spinner","confirmAlert","UserProfile","constructor","changeHandler","e","setState","target","name","value","submitHandeler","preventDefault","state","email","password","phone","role","conf_password","Body","is_createuser","post","then","response","title","message","buttons","label","onClick","Get_user_from_api","catch","error","data","change_panel","dataSource","isload_data","modalShow","idUser","etat","url","fetch","json","responseJson","content","console","log","componentDidMount","changeEtatuserHandeler","patch","deleteHandeler","delete","modalEvent","event","id","render","map","key","enabled","creationDate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  Table,\n\n} from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form'\n\nimport { Card } from \"components/Card/Card.jsx\";\n\nimport \"assets/css/customcss.css\";\nimport Button from 'react-bootstrap/Button'\nimport { Api_route } from '../components/baseApi'\nimport axios from 'axios';\nimport Spinner from 'react-spinner-material';\n//import Badge from 'react-bootstrap/Badge'\nimport 'materialize-css';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css'\n\n\nclass UserProfile extends Component {\n  constructor() {\n    super()\n    this.state = {\n      change_panel: false,\n      dataSource: [],\n      isload_data: true,\n      email: null,\n      name: null,\n      password: null,\n      phone: null,\n      role: \"AGENT\",\n      conf_password: null,\n      modalShow: false,\n      idUser: null,\n      is_createuser: false,\n    }\n\n  }\n\n  change_panel(etat) {\n    this.setState({\n      change_panel: etat,\n      email: null,\n      name: null,\n      password: null,\n      phone: null,\n      role: \"AGENT\",\n      conf_password: null,\n    });\n  }\n\n\n  Get_user_from_api() {\n\n\n    const url = \"users?page=0&size=4\"\n    fetch(Api_route(url))\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({\n          dataSource: responseJson.content,\n          isload_data: false,\n          modalShow: false,\n          idUser: null,\n          is_createuser: false,\n        })\n        console.log(responseJson);\n\n      })\n      .catch((error) => {\n\n        console.log(error)\n\n      })\n\n\n\n\n  }\n\n  componentDidMount() {\n    this.Get_user_from_api();\n  }\n\n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  submitHandeler = e => {\n    e.preventDefault();\n\n    const { email, name, password, phone, role, conf_password } = this.state;\n    let Body = {\n      \"email\": email,\n      \"name\": name,\n      \"password\": password,\n      \"phone\": phone,\n      \"role\": role\n\n    };\n    if (password === conf_password) {\n      this.setState({\n        is_createuser: true\n      });\n      axios.post(Api_route(\"users?userId=2\"), Body)\n        .then(response => {\n\n          // console.log(response);\n          confirmAlert({\n            title: 'Succés',\n            message: \"Enregistré avec succés\",\n            buttons: [\n              {\n                label: 'ok',\n                onClick: () => {\n                  this.setState({\n                    email: null,\n                    name: null,\n                    password: null,\n                    phone: null,\n                    role: \"AGENT\",\n                    conf_password: null,\n                  }, this.Get_user_from_api());\n\n                }\n              }\n            ]\n          })\n\n\n        })\n        .catch(error => {\n          // console.log(error.response.data.message);\n          // alert(error.response.data.message);\n\n          confirmAlert({\n            title: 'Erreur',\n            message: error.response.data.message,\n            buttons: [\n              {\n                label: 'Réessayer',\n                onClick: () => this.setState({\n                  is_createuser: false\n                })\n              }\n            ]\n          })\n\n\n\n        })\n    } else {\n      confirmAlert({\n        title: 'Erreur',\n        message: \"Mot de pass non idendique\",\n        buttons: [\n          {\n            label: 'Réessayer',\n            onClick: () => this.setState({\n              is_createuser: false\n            })\n          }\n        ]\n      })\n    }\n\n  }\n\n  changeEtatuserHandeler(idUser) {\n    if (idUser) {\n      axios.patch(Api_route(\"users/disable-user?adminId=2&userId=\" + idUser))\n        .then(response => {\n\n          console.log(response);\n          confirmAlert({\n            title: 'Succés',\n            message: \"Effectué avec succés\",\n            buttons: [\n              {\n                label: 'ok',\n                onClick: () => {\n                  this.Get_user_from_api();\n\n                }\n              }\n            ]\n          })\n        })\n        .catch(error => {\n          confirmAlert({\n            title: 'Erreur',\n            message: error.response.data.message,\n            buttons: [\n              {\n                label: 'Réessayer',\n                onClick: () => this.setState({\n                  is_createuser: false\n                })\n              }\n            ]\n          });\n        })\n    }\n  }\n\n  deleteHandeler(idUser) {\n    if (idUser) {\n      axios.delete(Api_route(\"users/\" + idUser))\n        .then(response => {\n\n          console.log(response);\n\n          confirmAlert({\n            title: 'Succés',\n            message: \"Supprimé avec succés\",\n            buttons: [\n              {\n                label: 'ok',\n                onClick: () => {\n                  this.Get_user_from_api();;\n\n                }\n              }\n            ]\n          })\n        })\n        .catch(error => {\n          confirmAlert({\n            title: 'Erreur',\n            message: error.response.data.message,\n            buttons: [\n              {\n                label: 'Réessayer',\n                onClick: () => this.setState({\n                  is_createuser: false\n                })\n              }\n            ]\n          });\n        })\n    }\n  }\n  modalEvent(event, id) {\n    this.setState({\n      modalShow: event,\n      idUser: id,\n    });\n  }\n  render() {\n    const { email, name, password, phone, role, conf_password } = this.state;\n    // console.log(this.state.dataSource);\n\n\n    return (\n\n      <div className=\"content\">\n\n\n\n\n        {\n          this.state.change_panel\n            ?\n\n\n            <Grid fluid>\n              <Row>\n                <Col md={12}>\n\n                  <Card\n                    title=\"Ajouter Un utilisateur\"\n                    content={\n\n                      <Form onSubmit={this.submitHandeler}>\n\n\n                        <Form.Group controlId=\"formnom\">\n                          <Form.Label>Nom complet :</Form.Label>\n                          <Form.Control type=\"text\" placeholder=\"Enter le mon complet\" name=\"name\" required value={name} onChange={this.changeHandler} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"foremail\">\n                          <Form.Label>Email :</Form.Label>\n                          <Form.Control type=\"email\" placeholder=\"Enter le email\" name=\"email\" required value={email} onChange={this.changeHandler} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"forphone\">\n                          <Form.Label>Numéro de téléphone :</Form.Label>\n                          <Form.Control type=\"tel\" placeholder=\"le Numéro de téléphone \" name=\"phone\" required value={phone} onChange={this.changeHandler} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"forpss\">\n                          <Form.Label>Mot de pass:</Form.Label>\n                          <Form.Control type=\"password\" placeholder=\"Mot de pass \" name=\"password\" required value={password} onChange={this.changeHandler} />\n                        </Form.Group>\n                        <Form.Group controlId=\"forpss\">\n                          <Form.Label>Confirmer le mot de pass:</Form.Label>\n                          <Form.Control type=\"password\" placeholder=\"Confirmer le mot de pass \" name=\"conf_password\" required value={conf_password} onChange={this.changeHandler} />\n                        </Form.Group>\n\n\n\n\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                          <Form.Label>Role</Form.Label>\n                          <Form.Control as=\"select\" name=\"role\" value={role} onChange={this.changeHandler} >\n                            <option value=\"AGENT\"  >AGENT</option>\n                            <option value=\"ADMIN\">ADMIN</option>\n\n                          </Form.Control>\n                        </Form.Group>\n                        {\n                          !this.state.is_createuser\n                            ?\n                            <>\n                              <Button variant=\"primary\" type=\"submit\" >\n                                Enregistrer\n                             </Button>\n                              <Button variant=\"danger\" type=\"button\" className=\"btn_margin\" onClick={() => { this.change_panel(false) }}>\n                                QUITTER\n                             </Button>\n\n                            </>\n                            :\n                            <div className=\"loader\">\n                              <Spinner size={120} spinnerColor={\"#333\"} spinnerWidth={2} visible={true} />\n                            </div>\n\n                        }\n\n                      </Form>\n\n                    }\n                  />\n                </Col>\n              </Row>\n            </Grid>\n            :\n\n            <>\n\n\n              <Grid fluid>\n\n\n                <Row>\n                  <Col md={12}>\n\n                    <Card\n                      title={null}\n                      category=\"\"\n                      ctTableFullWidth\n                      ctTableResponsive\n                      content={\n                        <div className=\"content\">\n                          <Col md={3}>\n                            <button className=\"bg_site btn  btn_site\" onClick={() => { this.change_panel(true) }}>Ajouter un agent</button>\n                          </Col>\n                          <Col md={7}>\n                            <Form className=\"form_recherche col-lg-12\">\n                              <Form.Control type=\"text col-lg-9\" placeholder=\"Enter le nom à rechercher\" />\n                            </Form>\n                          </Col>\n                        </div>\n                      }\n                    />\n                  </Col>\n                </Row>\n              </Grid>\n\n\n\n\n\n              <Grid fluid>\n\n\n                <Row>\n                  <Col md={12}>\n\n                    <Card\n                      title=\"List des agents\"\n                      category=\"\"\n                      ctTableFullWidth\n                      ctTableResponsive\n                      content={\n                        <>\n\n                          <Table striped hover>\n                            <thead>\n                              <tr>\n                                <th >NOM COMPLET</th>\n                                <th >NUMERO DE TELEEPHONE</th>\n                                <th >EMAIL</th>\n                                <th>ROLE</th>\n                                <th>ETAT</th>\n                                <th>DATE DE CREATION</th>\n                                {/* <th>DATE DE MODIFICATION</th> */}\n                                <th></th>\n                                <th></th>\n                              </tr>\n                            </thead>\n\n                            <tbody>\n\n                              {\n                                this.state.dataSource\n                                  ?\n                                  this.state.dataSource.map((data, key) => {\n                                    return (\n                                      <tr key={key}>\n                                        <td>{data.name}</td>\n                                        <td>{data.phone ? data.phone : \"pas de numéro\"}</td>\n                                        <td>{data.email}</td>\n                                        <td>{data.role}</td>\n                                        <td>\n                                          {/* <Badge pill variant=\"primary\">\n                                        Info\n                                      </Badge>{''} */\n                                          }\n                                          <span className={data.enabled ? \"etat bg_site\" : \"etat bg_danger\"}>{data.enabled ? \"ACTIVÉ\" : \"DESACTIVÉ\"} </span>\n                                        </td>\n                                        <td>{data.creationDate}</td>\n                                        {/* <td>{data.updateDate}</td> */}\n                                        {/* <td><Button variant={data.enabled?\"danger\":\"primary\"}>{data.enabled?\"ACTIVER\":\"DESACTIVER\"}</Button></td>  */}\n                                        {\n                                          this.state.modalShow && this.state.idUser === data.id\n                                            ?\n                                            null\n                                            :\n                                            <td> <button className={data.enabled ? \"bg_danger btn  btn_site\" : \"bg_site btn  btn_site\"} onClick={() => {\n                                              this.setState({\n                                                isload_data: true\n                                              }, this.changeEtatuserHandeler(data.id));\n                                            }}  >{data.enabled ? \"DESACTIVER\" : \"REACTIVER\"}</button></td>\n\n                                        }\n                                        <td>\n                                          {\n                                            this.state.modalShow && this.state.idUser === data.id\n                                              ?\n                                              <>\n                                                <p>Supprimer cet agent?</p>\n                                                <p><button className=\"text-danger\"\n                                                  onClick={() => {\n                                                    this.setState({\n                                                      isload_data: true\n                                                    }, this.deleteHandeler(data.id));\n                                                  }}\n                                                >oui</button>\n                                                  <button className=\"text-primary\"\n                                                    onClick={() => {\n                                                      this.modalEvent(false, null);\n                                                    }}\n                                                  >non</button></p>\n\n                                              </>\n                                              :\n                                              <button className=\"bg_danger btn  btn_site\"\n                                                onClick={() => {\n                                                  this.modalEvent(true, data.id);\n                                                }}\n                                              ><i className=\"fa fa-trash\"></i></button>\n\n\n                                          }\n                                        </td>\n                                      </tr>\n                                    );\n                                  })\n                                  :\n                                  null\n                              }\n                            </tbody>\n                          </Table>\n                          <div className=\"loader\">\n                            <Spinner size={120} spinnerColor={\"#333\"} spinnerWidth={2} visible={this.state.isload_data} />\n                          </div>\n                        </>\n                      }\n                    />\n                  </Col>\n                </Row>\n              </Grid>\n            </>\n        }\n\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}