{"ast":null,"code":"var _jsxFileName = \"/root/web/pasa/src/views/UserProfile.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\"; // import Button from \"components/CustomButton/CustomButton.jsx\";\n\nimport { thArray, tdArray } from \"variables/Variables.jsx\";\nimport \"assets/css/customcss.css\";\nimport Button from 'react-bootstrap/Button';\nimport { Api_route } from '../components/baseApi';\nimport axios from 'axios';\nimport Spinner from 'react-spinner-material';\n\nclass UserProfile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      change_panel: false,\n      dataSource: [],\n      isload_data: true,\n      email: null,\n      name: null,\n      password: null,\n      phone: null,\n      role: null,\n      conf_password: null\n    };\n  }\n\n  change_panel(etat) {\n    this.setState({\n      change_panel: etat\n    });\n  }\n\n  Get_user_from_api() {\n    const url = \"users?page=0&size=4\";\n    fetch(Api_route(url)).then(response => response.json()).then(responseJson => {\n      this.setState({\n        dataSource: responseJson.content,\n        isload_data: false\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.Get_user_from_api();\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          name = _this$state.name,\n          password = _this$state.password,\n          phone = _this$state.phone,\n          role = _this$state.role,\n          conf_password = _this$state.conf_password;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, this.state.change_panel ? /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Ajouter Un utilisateur\",\n      content: /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formnom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }\n      }, \"Nom complet :\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter le mon complet\",\n        name: \"name\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"foremail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 27\n        }\n      }, \"Email :\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter le email\",\n        name: \"email\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"forphone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 27\n        }\n      }, \"Num\\xE9ro de t\\xE9l\\xE9phone :\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"tel\",\n        placeholder: \"le Num\\xE9ro de t\\xE9l\\xE9phone \",\n        name: \"phone\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"forpss\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 27\n        }\n      }, \"Mot de pass:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Mot de pass \",\n        name: \"password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"forpss\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 27\n        }\n      }, \"Confirmer le mot de pass:\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Confirmer le mot de pass \",\n        name: \"conf_password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"exampleForm.ControlSelect1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 27\n        }\n      }, \"Role\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"AGENT\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, \"AGENT\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"ADMIN\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, \"ADMIN\"))), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }, \"Enregistrer\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        type: \"button\",\n        className: \"btn_margin\",\n        onClick: () => {\n          this.change_panel(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, \"Annuler\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    })))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: null,\n      category: \"\",\n      ctTableFullWidth: true,\n      ctTableResponsive: true,\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"bg_site color_wt border_none\",\n        onClick: () => {\n          this.change_panel(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }\n      }, \"Ajouter un agent\")), /*#__PURE__*/React.createElement(Col, {\n        md: 7,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        className: \"form_recherche col-lg-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text col-lg-9\",\n        placeholder: \"Enter le nom \\xE0 rechercher\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 31\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"List des agents\",\n      category: \"\",\n      ctTableFullWidth: true,\n      ctTableResponsive: true,\n      content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n        striped: true,\n        hover: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 33\n        }\n      }, \"NOM COMPLET\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 33\n        }\n      }, \"EMAIL\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 33\n        }\n      }, \"ROLE\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 33\n        }\n      }, \"DATE DE CREATION\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 33\n        }\n      }, \"DATE DE MODIFICATION\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }, this.state.dataSource.map((data, key) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 37\n          }\n        }, data.name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 37\n          }\n        }, data.email), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 37\n          }\n        }, data.role), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 37\n          }\n        }, data.creationDate), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 37\n          }\n        }, data.updateDate));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        size: 120,\n        spinnerColor: \"#333\",\n        spinnerWidth: 2,\n        visible: this.state.isload_data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }))))));\n  }\n\n}\n\nexport default UserProfile;","map":{"version":3,"sources":["/root/web/pasa/src/views/UserProfile.jsx"],"names":["React","Component","Grid","Row","Col","Table","Form","Card","FormInputs","UserCard","thArray","tdArray","Button","Api_route","axios","Spinner","UserProfile","constructor","state","change_panel","dataSource","isload_data","email","name","password","phone","role","conf_password","etat","setState","Get_user_from_api","url","fetch","then","response","json","responseJson","content","catch","error","console","log","componentDidMount","render","map","data","key","creationDate","updateDate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Row,\n  Col,\n  Table,\n\n} from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form'\n\nimport { Card } from \"components/Card/Card.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\nimport { UserCard } from \"components/UserCard/UserCard.jsx\";\n// import Button from \"components/CustomButton/CustomButton.jsx\";\nimport { thArray, tdArray } from \"variables/Variables.jsx\";\nimport \"assets/css/customcss.css\";\nimport Button from 'react-bootstrap/Button';\nimport { Api_route } from '../components/baseApi'\nimport axios from 'axios';\nimport Spinner from 'react-spinner-material';\n\nclass UserProfile extends Component {\n  constructor() {\n    super()\n    this.state = {\n      change_panel: false,\n      dataSource: [],\n      isload_data: true,\n      email: null,\n      name: null,\n      password: null,\n      phone: null,\n      role: null,\n      conf_password:null,\n    }\n \n\n\n\n  }\n  change_panel(etat) {\n    this.setState({ change_panel: etat });\n  }\n\n\n  Get_user_from_api() {\n\n\n    const url = \"users?page=0&size=4\"\n    fetch(Api_route(url))\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({\n          dataSource: responseJson.content,\n          isload_data: false,\n        })\n\n      })\n      .catch((error) => {\n\n        console.log(error)\n\n      })\n\n\n\n  }\n\n  componentDidMount() {\n    this.Get_user_from_api();\n  }\n\n\n\n  render() {\n    const {email,name,password,phone,role, conf_password}=this.state;\n\n    return (\n\n      <div className=\"content\">\n\n\n\n        {\n          this.state.change_panel\n            ?\n\n\n            <Grid fluid>\n              <Row>\n                <Col md={12}>\n\n                  <Card\n                    title=\"Ajouter Un utilisateur\"\n                    content={\n\n                      <Form>\n                        <Form.Group controlId=\"formnom\">\n                          <Form.Label>Nom complet :</Form.Label>\n                          <Form.Control type=\"text\" placeholder=\"Enter le mon complet\" name=\"name\" required />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"foremail\">\n                          <Form.Label>Email :</Form.Label>\n                          <Form.Control type=\"email\" placeholder=\"Enter le email\" name=\"email\" required />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"forphone\">\n                          <Form.Label>Numéro de téléphone :</Form.Label>\n                          <Form.Control type=\"tel\" placeholder=\"le Numéro de téléphone \" name=\"phone\" required />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"forpss\">\n                          <Form.Label>Mot de pass:</Form.Label>\n                          <Form.Control type=\"password\" placeholder=\"Mot de pass \" name=\"password\" required />\n                        </Form.Group>\n                        <Form.Group controlId=\"forpss\">\n                          <Form.Label>Confirmer le mot de pass:</Form.Label>\n                          <Form.Control type=\"password\" placeholder=\"Confirmer le mot de pass \" name=\"conf_password\" required />\n                        </Form.Group>\n\n\n\n\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                          <Form.Label>Role</Form.Label>\n                          <Form.Control as=\"select\">\n                            <option value=\"AGENT\">AGENT</option>\n                            <option value=\"ADMIN\">ADMIN</option>\n\n                          </Form.Control>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" >\n                          Enregistrer\n                     </Button>\n                        <Button variant=\"danger\" type=\"button\" className=\"btn_margin\" onClick={() => { this.change_panel(false) }}>\n                          Annuler\n                     </Button>\n\n                      </Form>\n\n                    }\n                  />\n                </Col>\n              </Row>\n            </Grid>\n            :\n\n            <>\n\n\n              <Grid fluid>\n\n\n                <Row>\n                  <Col md={12}>\n\n                    <Card\n                      title={null}\n                      category=\"\"\n                      ctTableFullWidth\n                      ctTableResponsive\n                      content={\n                        <div className=\"content\">\n                          <Col md={3}>\n                            <Button className=\"bg_site color_wt border_none\" onClick={() => { this.change_panel(true) }}>Ajouter un agent</Button>\n                          </Col>\n                          <Col md={7}>\n                            <Form className=\"form_recherche col-lg-12\">\n                              <Form.Control type=\"text col-lg-9\" placeholder=\"Enter le nom à rechercher\" />\n                            </Form>\n                          </Col>\n                        </div>\n                      }\n                    />\n                  </Col>\n                </Row>\n              </Grid>\n\n\n     \n\n\n              <Grid fluid>\n\n\n                <Row>\n                  <Col md={12}>\n\n                    <Card\n                      title=\"List des agents\"\n                      category=\"\"\n                      ctTableFullWidth\n                      ctTableResponsive\n                      content={\n                        <>\n                       \n                          <Table striped hover>\n                            <thead>\n                              <tr>\n                                <th >NOM COMPLET</th>\n                                {/* <th >NUMERO DE TELEEPHONE</th> */}\n                                <th >EMAIL</th>\n                                <th>ROLE</th>\n                                <th>DATE DE CREATION</th>\n                                <th>DATE DE MODIFICATION</th>\n                              </tr>\n                            </thead>\n\n                            <tbody>\n                         \n                              {this.state.dataSource.map((data, key) => {\n                                return (\n                                  <tr key={key}>\n                                    <td>{data.name}</td>\n                                    {/* <td>{data.phone}</td> */}\n                                    <td>{data.email}</td>\n                                    <td>{data.role}</td>\n                                    <td>{data.creationDate}</td>\n                                    <td>{data.updateDate}</td>\n                                  </tr>\n                                );\n                              })}\n                            </tbody>\n                          </Table>\n                          <div className=\"loader\">\n                        <Spinner size={120} spinnerColor={\"#333\"} spinnerWidth={2} visible={this.state.isload_data} />\n                      </div>\n                        </>\n                      }\n                    />\n                  </Col>\n                </Row>\n              </Grid>\n            </>\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}